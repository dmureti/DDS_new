def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33
//    ndkVersion flutter.ndkVersion

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "tripletriolimited.distributor"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            // storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
//            signingConfig signingConfigs.release
//            minifyEnabled true
//            shrinkResources true
            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
//        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions "buildGroup"
    productFlavors {
        mini {
            dimension "buildGroup"
            applicationIdSuffix ".mini"
            versionNameSuffix "-mini"
        }
        internal {
            dimension "buildGroup"
            applicationIdSuffix ".internal"
            versionNameSuffix "-internal"
        }
        miniUganda {
            dimension "buildGroup"
            applicationIdSuffix ".miniUganda"
            versionNameSuffix "-miniUganda"

        }
        miniMsa {
            dimension "buildGroup"
            applicationIdSuffix ".miniMsa"
            versionNameSuffix "-miniMsa"
        }
        miniNrb {
            dimension "buildGroup"
            applicationIdSuffix ".miniNrb"
            versionNameSuffix "-miniNrb"
        }
        dds_4Sum {
            dimension "buildGroup"
            applicationIdSuffix ".dds_4Sum"
            versionNameSuffix "-dds_4Sum"
        }
        demo {
            dimension "buildGroup"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
        }
    }
    buildToolsVersion '30.0.3'

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation platform('com.google.firebase:firebase-bom:31.1.1')

    implementation 'com.google.firebase:firebase-analytics-ktx'
//    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
//    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.0.1'
//    implementation 'com.amazonaws:aws-android-sdk-s3:2.x.y'
//    implementation files('libs/ftsdk_api.jar')
//    implementation(files('lib/ftsdk_api.jar'))
//    implementation fileTree(dir: 'lib', includes: ['*.jar'])

//    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.13'
    //implementation 'com.google.firebase:firebase-perf:20.3.0'
//    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.9'
}
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.google.firebase.firebase-perf'
